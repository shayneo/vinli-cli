#!/usr/bin/env node
'use strict';

const _ = require('lodash');
const assertAppSecret = require('../lib/app').assertAppSecret;
const B = require('bluebird');
const dummy = require('../lib/dummy');
const program = require('commander');
const service = require('../lib/service');
const vinlirc = require('../lib/vinlirc');
const yarp = require('yarp');

const dummyService = service('dummy');

program
  .description('Get a list of dummy devices')
  .option('--app [app id]')
  .option('--secret [app secret]')
  .option('--dummy <id|name>')
  .parse(process.argv);

B.resolve(vinlirc.read(program))
  .then(assertAppSecret)
  .then((options) => {
    if (options.dummy) {
      return options;
    }
    return B.props(_.merge(options, dummy.find(options)));
  })
  .tap((options) => console.log(`Stopping run for dummy ${options.dummyName || options.dummy}...`))
  .then((options) =>
    yarp({
      method: 'DELETE',
      url: `${dummyService}/api/v1/dummies/${options.dummy}/runs/_current`,
      auth: {
        user: options.app,
        pass: options.secret
      }
    })
  )
  .then(() => console.log('Run stopping...'))
  .catch(require('../lib/error_handler'))
  .done();
